{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistic/Statistic.jsx","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistic/Statistic.module.css","components/Feedback/Feedback.module.css"],"names":["Section","title","children","FeedbackOptions","goodIncrement","neutralIncrement","badIncrement","className","styles","feedbackopt","type","button","onClick","Notification","message","Statistic","good","neutral","bad","total","positivePercentage","statistic","Feedback","state","setState","prevState","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","feedback","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAeeA,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,gCACI,6BAAKD,IACJC,M,gBCQEC,EAZS,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAE1D,OACE,sBAAKC,UAAWC,IAAOC,YAAvB,UACE,wBAAQC,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAASR,EAAzD,kBACA,wBAAQM,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAASP,EAAzD,qBACA,wBAAQK,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAASN,EAAzD,qBCDSO,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,K,gBCmCGC,EAjCG,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC5C,OAAID,EAEI,sBAAKZ,UAAWC,IAAOa,UAAvB,UACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,EAAT,OACA,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,WAOJ,cAAE,EAAF,CACIN,QAAS,uB,gBCiDVQ,E,4MA7DbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPd,cAAgB,WACd,EAAKoB,UAAS,SAAAC,GACZ,MAAO,CACLT,KAAMS,EAAUT,KAAO,O,EAK7BX,iBAAmB,WACjB,EAAKmB,UAAS,SAAAC,GACZ,MAAO,CACLR,QAASQ,EAAUR,QAAU,O,EAKnCX,aAAe,WACb,EAAKkB,UAAS,SAAAC,GACZ,MAAO,CACLP,IAAKO,EAAUP,IAAM,O,EAK3BQ,mBAAqB,kBAClBC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAElDC,gCAAkC,kBAAMC,KAAKC,MAAwB,IAAlB,EAAKX,MAAMP,KAAa,EAAKU,uB,4CAGhF,WAEE,OACE,sBAAKnB,UAAWC,IAAO2B,SAAvB,UACE,uDAEA,cAAC,EAAD,CACE/B,cAAegC,KAAKhC,cACpBC,iBAAkB+B,KAAK/B,iBACvBC,aAAc8B,KAAK9B,eAErB,cAAC,EAAD,CAASL,MAAO,eAChB,cAAC,EAAD,CACAe,KAAMoB,KAAKb,MAAMP,KACjBC,QAASmB,KAAKb,MAAMN,QACpBC,IAAKkB,KAAKb,MAAML,IAChBC,MAAOiB,KAAKV,qBACZN,mBAAoBgB,KAAKJ,2C,GAvDVK,aCERC,MATf,WACE,OACE,gCACC,cAAC,EAAD,IADD,QCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,YAAc,qCAAqC,OAAS,kC,kBCA9ED,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.f4d6eb8d.chunk.js","sourcesContent":["//import React from 'react';\n\n\n\nconst Section = ({ title, children }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            {children}\n        </div>\n    );\n    \n    \n};\n\nexport default Section;\n\n","//import React from 'react';\nimport styles from '../FeedbackOptions/FeedbackOptions.module.css';\n\n\nconst FeedbackOptions = ({ goodIncrement, neutralIncrement, badIncrement }) => {\n\n  return (\n    <div className={styles.feedbackopt}>\n      <button type='button' className={styles.button} onClick={goodIncrement}>Good</button>\n      <button type='button' className={styles.button} onClick={neutralIncrement}>Neutral</button>\n      <button type='button' className={styles.button} onClick={badIncrement}>Bad</button>\n    </div>\n  );\n    \n};\n\nexport default FeedbackOptions;","//import React from 'react';\n\nconst Notification = ({ message }) => {\n    return (\n        <p>{message}</p>\n    );\n    \n};\n\nexport default Notification","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport styles from '../Statistic/Statistic.module.css';\n\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n    if (total) {\n        return (\n            <div className={styles.statistic}>\n                <p>Good: {good}</p>\n                <p>Neutral: {neutral}</p>\n                <p>Bad: {bad} </p>\n                <p>Total: {total} </p>\n                <p>Positive feedback: {positivePercentage}% </p>\n            </div>\n        );\n   }\n\n    else {\n        return (\n            < Notification\n                message={'No feedback given'}\n        />\n    );\n    \n    };\n    \n};\n\nStatistic.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n\n};\n\nexport default Statistic;\n\n\n\n","//import React from 'react';\nimport { Component } from 'react';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistic from '../Statistic/Statistic';\nimport styles from '../Feedback/Feedback.module.css';\n\n\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  \n  goodIncrement = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  neutralIncrement = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  badIncrement = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => \n     Object.values(this.state).reduce((a, b) => a + b);\n\n  countPositiveFeedbackPercentage = () => Math.round(this.state.good * 100 / this.countTotalFeedback());\n\n  \n  render() {\n    \n    return (\n      <div className={styles.feedback}>\n        <h1>Please leave feedback</h1>\n          \n        <FeedbackOptions\n          goodIncrement={this.goodIncrement}\n          neutralIncrement={this.neutralIncrement}\n          badIncrement={this.badIncrement}\n        />\n        <Section title= \"Statistics\" />\n        <Statistic\n        good={this.state.good}\n        neutral={this.state.neutral}\n        bad={this.state.bad}\n        total={this.countTotalFeedback()}\n        positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </div>\n    );\n  }\n}\n\nexport default Feedback;\n\n\n\n","import Feedback from './components/Feedback/Feedback';\n\nfunction App(){\n  return (\n    <div>\n     <Feedback />;\n    </div>\n  )\n \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackopt\":\"FeedbackOptions_feedbackopt__Rxsf2\",\"button\":\"FeedbackOptions_button__1Y6GD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__3dSoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__7kDMP\"};"],"sourceRoot":""}